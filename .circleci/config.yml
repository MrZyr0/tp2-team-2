# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
executors:
  docker-publisher:
    environment:
      PROJECT_NAME: ynov-devops-tp2-team-2-api
    docker:
      - image: circleci/buildpack-deps:stretch
  docker-runner:
    docker:
      - image: circleci/node:12.13.0
jobs:

  ## new JOB !
  lint-code:
    executor: docker-runner
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: run ESLint & Prettier
          command: yarn eslint


  ## new JOB !
  build-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker # Ask circleci new Docker Engine to build outside of container
      - run:
          name: Create symlink to Dockerfile.prod
          command: ln ./Docker/nodejs/Dockerfile.prod ./Dockerfile
      - run:
          name: Build Docker image
          command: docker build -t $DOCKERHUB_USERNAME/${PROJECT_NAME}:latest . --compress --force-rm --no-cache --pull
      - run:
          name: Archive Docker image
          command: docker save -o ./image.tar $DOCKERHUB_USERNAME/${PROJECT_NAME}:latest
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
          
  ## new JOB !
  # publish-latest:
  #   executor: docker-publisher
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/workspace
  #     - setup_remote_docker
  #     - run:
  #         name: Load archived Docker image
  #         command: docker load -i /tmp/workspace/image.tar
  #     - run:
  #         name: Publish image to Docker Hub
  #         command: |
  #           echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  #           docker push $DOCKERHUB_USERNAME/${PROJECT_NAME}:latest

  ## new JOB !
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Setup image TAG
          command: IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
      - run:
          name: Rename Docker image
          command: docker tag $DOCKERHUB_USERNAME/${PROJECT_NAME}:latest $DOCKERHUB_USERNAME/${PROJECT_NAME}:${IMAGE_TAG}
      - run:
          name: Connect to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push image to Docker Hub
          command: | 
            docker push $DOCKERHUB_USERNAME/${PROJECT_NAME}:latest
            docker push $DOCKERHUB_USERNAME/${PROJECT_NAME}:$IMAGE_TAG

workflows:
  version: 2
  testing-project:
    jobs:
      - lint-code:
          filters:
            branches:
              only: master
      # - build-image:
      #     requires:
      #       - lint-code
      #     filters:
      #       branches:
      #         only: master
      # - publish-latest:
      #     requires:
      #       - build-image
      #     filters:
      #       branches:
      #         only: master
  build-tags:
    jobs:
      - build-image:
          filters:
            tags:
              only: /^v.*/  # execute only on tag v**
            branches:
              ignore: /.*/  # ignore all branches
      - publish-tag:
          requires:
            - build-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/